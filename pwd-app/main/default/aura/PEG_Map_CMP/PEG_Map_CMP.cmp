<aura:component implements="flexipage:availableForAllPageTypes,forceCommunity:availableForAllPageTypes,force:hasRecordId,force:hasSObjectName"
                access="global">
    
    <!-- Global Component Configuration -->
    <aura:attribute name="title"         type="String"   default="The Map"/>
    <aura:attribute name="icon"          type="String"   default="action:map" />
    <aura:attribute name="showBorder"    type="Boolean"  default="false"/>
    
    <aura:attribute name="locationConfigStr" type="String"
                    default='{"location": {
                             "Street" : {"field":"BillingStreet"},
                             "City"   : {"field":"BillingCity"},
                             "Country": {"field":"BillingCountry"}
                             },
                             "icon" : {"value":"custom:custom24"},
                             "title": {"field":"Name"},
                             "description": {"field":"Type"},
                             "value": {"field":"Id"}
                             }'/>
    <aura:attribute name="locationQuery" type="String"
                    default="select BillingCity,BillingCountry,Name,Type from Account where BillingCity !=null WITH SECURITY_ENFORCED order by Id LIMIT 3"/>
    
    <aura:attribute name="mapMarkersStr" type="String"
                    default='[{"location": {
                             "City": "{{{Object.BillingCity}}}",
                             "Country": "{{{Object.BillingCountry}}}"
                             },
                             "icon": "custom:custom1",
                             "title": "{{{Object.Name}}}",
                             "description": "{{{Object.Type}}}",
                             "value": "{{{Object.Id}}}"
                             }]' />
    <aura:attribute name="mapMarkers"    type="Object" />
    <aura:attribute name="markersTitle"  type="String" 
                    default="Map"/>
    <aura:attribute name="selectedItem"  type="String"
                    description="Selected Object in the map." />
    
    <aura:attribute name="searchText" type="String" default=""/>
    <aura:attribute name="unFilteredMapMarkers"    type="Object" />
    <aura:attribute name="selectedRecordId" type="string" default=""/>
    
    <!-- Data Management Parameters -->
    <aura:attribute name="bypassFLS"         type="Boolean"  default="false" 
                    description="Bypass FLS when executing query." />
    <aura:attribute name="bypassSharing"     type="Boolean"  default="false" 
                    description="Bypass Sharing when executing query." />
    <aura:attribute name="queryType"         type="String"   default=""
                    description="When requesting a byPass, a valid queryType should be provided (in PEG_Query__mdt)." />
    <aura:attribute name="isStorable"        type="Boolean"  default="false" 
                    description="Query action storable mode activation." />
    <aura:attribute name="isBackground"      type="Boolean"  default="false" 
                    description="Query action background mode activation." />
    
    <!-- Actions configuration -->
    <aura:attribute name="tableActionStr"  type="String"
                    default='[{	"type" : "menu",
                             "items" : [	{"icon":"open", "label":"Open",
                             "event":{"name":"e.force:navigateToSObject","params":{"recordId":"{{{Row.Id}}}"}}},
                             {"icon":"edit", "label":"Edit",
                             "event":{"name":"e.force:editRecord","params":{"recordId":"{{{Row.Id}}}"}}}]
                             }]'
                    description="Header actions configuration (if any)." />
    <aura:attribute name="tableActionJson"  type="List"
                    default='[]'  
                    description="JSON conversion of header actions configuration." />
    
    <!-- handlers-->
    <aura:handler name="init" value="{! this }" action="{! c.init }"
                  description="Initialization of the component : generation of the required SOQL query." />
    <aura:handler event="lightning:tabRefreshed" action="{!c.refreshMap}"
                  description="Refreshing of the underlying SOQL list." />
    
    <!-- Utility Components -->
    <lightning:notificationsLibrary aura:id="notifUtil"/>
    <c:PEG_Merge_CMP aura:id="mergeUtil1"
                     recordId="{!v.recordId}"
                     sObjectName="{!v.sObjectName}"/>
    <c:PEG_Merge_CMP aura:id="mergeUtil2"
                     recordId="{!v.recordId}"
                     sObjectName="{!v.sObjectName}"/>
    <c:PEG_SOQL_CMP  aura:id="soqlUtil"/>
    <c:PEG_JSON_CMP  aura:id="jsonUtil"/>
    
    <!-- the map component -->
    <lightning:card title="{!v.title}" iconName="{!v.icon}" 
                    class="{! if(v.showBorder, 'slds-card_boundary', '')}" >
        <aura:set attribute="title">
             <h1>{!v.title}</h1>  
            <aura:if isTrue="{!not(empty(v.selectedRecordId))}">
                <a href="javascript:void(0)" onclick="{!c.navigateToRecord}">
                     View more details about this Program
                </a>
            </aura:if> 
        </aura:set>     
        <aura:set attribute="actions">
            <aura:if isTrue="{!v.tableActionJson.length > 0}">
                <c:PEG_ActionGroup_CMP actionList="{!v.tableActionJson}"
                                       callback="{!c.handleTableAction}" />
            </aura:if>
            
            <span style="display:inline-block">
                <div class="slds-input-has-icon slds-input-has-icon--right" style="display:inherit; margin:5px;">
                    <div onkeyup="{!c.onPressKeyBoard}">
                    <lightning:buttonIcon iconName="utility:search" variant="bare" onclick="{! c.handleFilterOnClick }" alternativeText="Search" class="slds-input__icon" />
                    <ui:inputText value="{!v.searchText}" class="slds-lookup__search-input slds-input" placeholder="Search" />
                    </div>
                </div>
                
                <lightning:buttonGroup class="slds-col">
                    
                    <lightning:buttonIcon iconName="utility:refresh"
                                          alternativeText="Open"
                                          variant="border"
                                          class="slds-button_last"
                                          onclick="{!c.refreshMap}"/>
                </lightning:buttonGroup>
                </span>
        </aura:set>
        
        <div class="{! 'slds-card__body' + if(v.showBorder, ' slds-card__body_inner', '')}">
            <aura:if isTrue="{!v.mapMarkers.length == 1}">
                <lightning:map 
                               title="{!v.title}"
                               zoomLevel="10"
                               mapMarkers="{! v.mapMarkers }"
                               markersTitle="{!v.markersTitle}"
                               selectedMarkerValue="{!v.selectedItem}"
                               onmarkerselect="{!c.handleSelect}"
                               onclick="{!c.handleClick}"/>
            </aura:if>
            
            <aura:if isTrue="{!v.mapMarkers.length > 1}">  
                <lightning:map 
                               title="{!v.title}"       
                               mapMarkers="{! v.mapMarkers }"
                               markersTitle="{!v.markersTitle}"
                               selectedMarkerValue="{!v.selectedItem}"
                               onmarkerselect="{!c.handleSelect}"
                               onclick="{!c.handleClick}"/>
            </aura:if>
        </div> 
    </lightning:card>


</aura:component>